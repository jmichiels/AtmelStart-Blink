#!/usr/bin/env python

import os
import sys
import json
import shutil
import zipfile

SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))

LIBRARY_JSON = SCRIPT_DIR + '/library.json'

library_json = {
    'name': 'AtmelStart',
    'description': 'Encapsulates code generated by Atmel Start',
    'build': {
        'libArchive': False,
        'srcFilter': [],
        'flags': [
            "!echo \"-Wl,-T$(pwd)/generated/samd21a/gcc/gcc/samd21g18a_flash.ld\"",
            "-Wl,--section-start=.text=0x2000"
        ],
    }
}

GEN_DIR = SCRIPT_DIR + '/generated'

if len(sys.argv) == 2:
    shutil.rmtree(GEN_DIR)
    # Argument can be project zip file.
    f = zipfile.ZipFile(sys.argv[1])
    f.extractall(GEN_DIR)
    f.close()

MAKEFILE = GEN_DIR + '/gcc/Makefile'

if not os.path.isfile(MAKEFILE):
    print("MakeFile is missing")

with open(MAKEFILE) as makefile:
    for line in makefile:
        if line.startswith('OBJS'):
            break

    for line in makefile:
        strip = line.strip()
        if not strip:
            break
        path = strip.split('.')[0]
        if path != 'main':
            # Add to sources filter.
            library_json['build']['srcFilter'].append('+<generated/' + path + '.c>')

    for line in makefile:
        if line.startswith('-I'):
            for arg in line.split('-I')[1:]:
                path = arg.split('"')[1]
                # Add to include build flags.
                library_json['build']['flags'].append('-Igenerated/' + path[3:])
            break


with open(LIBRARY_JSON, 'w') as library_json_file:
    library_json_file.write(json.dumps(library_json,  indent=2, sort_keys=True))